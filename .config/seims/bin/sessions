#!/usr/bin/ruby

# .:.
# open terminal with tmux session
require 'psych'

def select_session(sessions:)
  session_names = sessions.keys.join("\n")
  session_name = %x(echo -e "#{session_names}" | rofi -dmenu -i -p session).strip

  unless session_name.empty?
    exec "alacritty -e sessions #{session_name}"
  end
end

def has_session(session_name:)
  system("tmux has-session -t #{session_name}")
end

def create_session(sessions:, session_name:)
  if has_session(session_name: session_name)
    exec "tmux attach-session -t #{session_name}"
  end
  if sessions.keys.include?(session_name)
    session = sessions[session_name]
    system(session['cmd']) unless session['cmd'].nil?

    windows = session['windows']

    commands = [
      "rename-window -t :0 #{windows[0]['name']}",
      "send-keys -t :0 \"cd #{windows[0]['dir']}\" Enter",
      "send-keys -t :0 \"#{windows[0]['cmd']}\" Enter"
    ]
    windows[1..-1].each do |window|
      commands += prepare_window(dir: window['dir'], cmd: window['cmd'], name: window['name'])
    end
    exec "tmux new-session -s #{session_name} \\; #{commands.join(" \\; ")}"
  else
    exec "tmux new-session -s #{session_name}"
  end
end

def prepare_window(dir:, cmd:, name:)
  commands = ["new-window -c #{dir} -n #{name} zsh"]
  unless cmd.nil?
    commands << "send-keys -t #{name} \"#{cmd}\" Enter"
  end
  commands
end

begin
  sessions = Psych.safe_load(File.read('/home/seims/.config/seims/sessions.yml'))
  sessions = sessions.map { |session| [session['name'], session] }.to_h

  if ARGV[0]
    session_name = ARGV[0].strip
    create_session(sessions: sessions, session_name: session_name)
  else
    select_session(sessions: sessions)
  end
end
